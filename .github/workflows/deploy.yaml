name: Deploy rfitness

on:
  push:
    branches:
      - "my-prod"

permissions:
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/shahidshabbir-se/rfitness:latest
            ghcr.io/shahidshabbir-se/rfitness:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create environment file
        run: echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

      - name: Set up SSH key and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Docker Stack (Without App)
        uses: cssnr/stack-deploy-action@v1
        with:
          name: rfitness
          file: docker-stack.yaml
          host: ${{ secrets.SERVER_IP }}
          user: ${{ secrets.SERVER_USER }}
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile

      - name: Run Prisma Migrations in the App Container
        run: |
          echo "Running Prisma migrations..."
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          APP_CONTAINER=$(docker ps --filter "name=app" --format "{{.ID}}")
          if [ -z "$APP_CONTAINER" ]; then
            echo "App container not found!"
            exit 1
          fi
          echo "Applying Prisma migrations..."
          docker exec $APP_CONTAINER npx prisma migrate deploy
          EOF

      - name: Start Application After Migrations
        run: |
          echo "Starting app service..."
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker service scale rfitness_app=1"
