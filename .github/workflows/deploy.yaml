name: Deploy rfitness

on:
  push:
    branches:
      - "my-prod"

permissions:
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/engenlabs/rfitness:latest
            ghcr.io/engenlabs/rfitness:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create environment file
        run: echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

      - name: Deploy Docker Stack (Without App)
        uses: cssnr/stack-deploy-action@v1
        with:
          name: rfitness
          file: docker-stack.yaml
          host: ${{ secrets.SERVER_IP }}
          user: ${{ secrets.SERVER_USER }}
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile

      - name: Wait for Database to be Ready
        run: |
          echo "Waiting for database..."
          until nc -z -v -w30 ${{ secrets.DB_HOST }} 5432
          do
            echo "Database is not ready yet..."
            sleep 5
          done
          echo "Database is ready!"

      - name: Run Prisma Migrations Over SSH Tunnel
        run: |
          echo "Starting SSH tunnel..."
          ssh -o IdentitiesOnly=yes -i ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }} -N -L 5433:localhost:5432 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} &
          SSH_TUNNEL_PID=$!

          echo "Waiting for tunnel to be ready..."
          sleep 5

          echo "Running Prisma migrations..."
          DATABASE_URL="postgresql://postgres:${{ secrets.DB_PASSWORD }}@localhost:5433/app"
          npx prisma migrate deploy

          echo "Closing SSH tunnel..."
          kill $SSH_TUNNEL_PID

      - name: Start Application After Migrations
        run: |
          echo "Starting app service..."
          ssh -i ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker service scale rfitness_app=1"
